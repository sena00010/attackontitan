"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-dropzone-esm";
exports.ids = ["vendor-chunks/react-dropzone-esm"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ accepts)\n/* harmony export */ });\nfunction accepts(file, acceptedFiles) {\n    if (file && acceptedFiles) {\n        const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(\",\");\n        const fileName = file.name || \"\";\n        const mimeType = (file.type || \"\").toLowerCase();\n        const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n        return acceptedFilesArray.some((type)=>{\n            const validType = type.trim().toLowerCase();\n            if (validType.charAt(0) === \".\") {\n                return fileName.toLowerCase().endsWith(validType);\n            } else if (validType.endsWith(\"/*\")) {\n                return baseMimeType === validType.replace(/\\/.*$/, \"\");\n            }\n            return mimeType === validType;\n        });\n    }\n    return true;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcHpvbmUtZXNtL2Rpc3QvZXNtL2F0dHItYWNjZXB0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsU0FBU0EsUUFBUUMsSUFBSSxFQUFFQyxhQUFhO0lBQ2xDLElBQUlELFFBQVFDLGVBQWU7UUFDekIsTUFBTUMscUJBQXFCQyxNQUFNQyxPQUFPLENBQUNILGlCQUFpQkEsZ0JBQWdCQSxjQUFjSSxLQUFLLENBQUM7UUFDOUYsTUFBTUMsV0FBV04sS0FBS08sSUFBSSxJQUFJO1FBQzlCLE1BQU1DLFdBQVcsQ0FBQ1IsS0FBS1MsSUFBSSxJQUFJLEVBQUMsRUFBR0MsV0FBVztRQUM5QyxNQUFNQyxlQUFlSCxTQUFTSSxPQUFPLENBQUMsU0FBUztRQUMvQyxPQUFPVixtQkFBbUJXLElBQUksQ0FBQyxDQUFDSjtZQUM5QixNQUFNSyxZQUFZTCxLQUFLTSxJQUFJLEdBQUdMLFdBQVc7WUFDekMsSUFBSUksVUFBVUUsTUFBTSxDQUFDLE9BQU8sS0FBSztnQkFDL0IsT0FBT1YsU0FBU0ksV0FBVyxHQUFHTyxRQUFRLENBQUNIO1lBQ3pDLE9BQU8sSUFBSUEsVUFBVUcsUUFBUSxDQUFDLE9BQU87Z0JBQ25DLE9BQU9OLGlCQUFpQkcsVUFBVUYsT0FBTyxDQUFDLFNBQVM7WUFDckQ7WUFDQSxPQUFPSixhQUFhTTtRQUN0QjtJQUNGO0lBQ0EsT0FBTztBQUNUO0FBRThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXR0YWNrLW9uLXRpdGFuLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRyb3B6b25lLWVzbS9kaXN0L2VzbS9hdHRyLWFjY2VwdC5tanM/NjBhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhY2NlcHRzKGZpbGUsIGFjY2VwdGVkRmlsZXMpIHtcbiAgaWYgKGZpbGUgJiYgYWNjZXB0ZWRGaWxlcykge1xuICAgIGNvbnN0IGFjY2VwdGVkRmlsZXNBcnJheSA9IEFycmF5LmlzQXJyYXkoYWNjZXB0ZWRGaWxlcykgPyBhY2NlcHRlZEZpbGVzIDogYWNjZXB0ZWRGaWxlcy5zcGxpdChcIixcIik7XG4gICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlLm5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCBtaW1lVHlwZSA9IChmaWxlLnR5cGUgfHwgXCJcIikudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBiYXNlTWltZVR5cGUgPSBtaW1lVHlwZS5yZXBsYWNlKC9cXC8uKiQvLCBcIlwiKTtcbiAgICByZXR1cm4gYWNjZXB0ZWRGaWxlc0FycmF5LnNvbWUoKHR5cGUpID0+IHtcbiAgICAgIGNvbnN0IHZhbGlkVHlwZSA9IHR5cGUudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICBpZiAodmFsaWRUeXBlLmNoYXJBdCgwKSA9PT0gXCIuXCIpIHtcbiAgICAgICAgcmV0dXJuIGZpbGVOYW1lLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgodmFsaWRUeXBlKTtcbiAgICAgIH0gZWxzZSBpZiAodmFsaWRUeXBlLmVuZHNXaXRoKFwiLypcIikpIHtcbiAgICAgICAgcmV0dXJuIGJhc2VNaW1lVHlwZSA9PT0gdmFsaWRUeXBlLnJlcGxhY2UoL1xcLy4qJC8sIFwiXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1pbWVUeXBlID09PSB2YWxpZFR5cGU7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCB7IGFjY2VwdHMgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbImFjY2VwdHMiLCJmaWxlIiwiYWNjZXB0ZWRGaWxlcyIsImFjY2VwdGVkRmlsZXNBcnJheSIsIkFycmF5IiwiaXNBcnJheSIsInNwbGl0IiwiZmlsZU5hbWUiLCJuYW1lIiwibWltZVR5cGUiLCJ0eXBlIiwidG9Mb3dlckNhc2UiLCJiYXNlTWltZVR5cGUiLCJyZXBsYWNlIiwic29tZSIsInZhbGlkVHlwZSIsInRyaW0iLCJjaGFyQXQiLCJlbmRzV2l0aCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromEvent: () => (/* binding */ fromEvent)\n/* harmony export */ });\n/* harmony import */ var _file_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/file.mjs\");\n\nvar __async = (__this, __arguments, generator)=>{\n    return new Promise((resolve, reject)=>{\n        var fulfilled = (value)=>{\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = (value)=>{\n            try {\n                step(generator.throw(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = (x)=>x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n        step((generator = generator.apply(__this, __arguments)).next());\n    });\n};\nconst FILES_TO_IGNORE = [\n    // Thumbnail cache files for macOS and Windows\n    \".DS_Store\",\n    // macOs\n    \"Thumbs.db\"\n];\nfunction fromEvent(evt) {\n    return __async(this, null, function*() {\n        if (isObject(evt) && isDataTransfer(evt.dataTransfer)) {\n            return getDataTransferFiles(evt.dataTransfer, evt.type);\n        } else if (isChangeEvt(evt)) {\n            return getInputFiles(evt);\n        } else if (Array.isArray(evt) && evt.every((item)=>\"getFile\" in item && typeof item.getFile === \"function\")) {\n            return getFsHandleFiles(evt);\n        }\n        return [];\n    });\n}\nfunction isDataTransfer(value) {\n    return isObject(value);\n}\nfunction isChangeEvt(value) {\n    return isObject(value) && isObject(value.target);\n}\nfunction isObject(v) {\n    return typeof v === \"object\" && v !== null;\n}\nfunction getInputFiles(evt) {\n    return fromList(evt.target.files).map((file)=>(0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file));\n}\nfunction getFsHandleFiles(handles) {\n    return __async(this, null, function*() {\n        const files = yield Promise.all(handles.map((h)=>h.getFile()));\n        return files.map((file)=>(0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file));\n    });\n}\nfunction getDataTransferFiles(dt, type) {\n    return __async(this, null, function*() {\n        if (dt.items) {\n            const items = fromList(dt.items).filter((item)=>item.kind === \"file\");\n            if (type !== \"drop\") {\n                return items;\n            }\n            const files = yield Promise.all(items.map(toFilePromises));\n            return noIgnoredFiles(flatten(files));\n        }\n        return noIgnoredFiles(fromList(dt.files).map((file)=>(0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file)));\n    });\n}\nfunction noIgnoredFiles(files) {\n    return files.filter((file)=>FILES_TO_IGNORE.indexOf(file.name) === -1);\n}\nfunction fromList(items) {\n    if (items === null) {\n        return [];\n    }\n    const files = [];\n    for(let i = 0; i < items.length; i++){\n        const file = items[i];\n        files.push(file);\n    }\n    return files;\n}\nfunction toFilePromises(item) {\n    if (typeof item.webkitGetAsEntry !== \"function\") {\n        return fromDataTransferItem(item);\n    }\n    const entry = item.webkitGetAsEntry();\n    if (entry && entry.isDirectory) {\n        return fromDirEntry(entry);\n    }\n    return fromDataTransferItem(item);\n}\nfunction flatten(items) {\n    return items.reduce((acc, files)=>[\n            ...acc,\n            ...Array.isArray(files) ? flatten(files) : [\n                files\n            ]\n        ], []);\n}\nfunction fromDataTransferItem(item) {\n    const file = item.getAsFile();\n    if (!file) {\n        return Promise.reject(`${item} is not a File`);\n    }\n    const fwp = (0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file);\n    return Promise.resolve(fwp);\n}\nfunction fromEntry(entry) {\n    return __async(this, null, function*() {\n        return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);\n    });\n}\nfunction fromDirEntry(entry) {\n    const reader = entry.createReader();\n    return new Promise((resolve, reject)=>{\n        const entries = [];\n        function readEntries() {\n            reader.readEntries((batch)=>__async(this, null, function*() {\n                    if (!batch.length) {\n                        try {\n                            const files = yield Promise.all(entries);\n                            resolve(files);\n                        } catch (err) {\n                            reject(err);\n                        }\n                    } else {\n                        const items = Promise.all(batch.map(fromEntry));\n                        entries.push(items);\n                        readEntries();\n                    }\n                }), (err)=>{\n                reject(err);\n            });\n        }\n        readEntries();\n    });\n}\nfunction fromFileEntry(entry) {\n    return __async(this, null, function*() {\n        return new Promise((resolve, reject)=>{\n            entry.file((file)=>{\n                const fwp = (0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file, entry.fullPath);\n                resolve(fwp);\n            }, (err)=>{\n                reject(err);\n            });\n        });\n    });\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/file.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/file.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMMON_MIME_TYPES: () => (/* binding */ COMMON_MIME_TYPES),\n/* harmony export */   toFileWithPath: () => (/* binding */ toFileWithPath)\n/* harmony export */ });\nconst COMMON_MIME_TYPES = /* @__PURE__ */ new Map([\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n    [\n        \"aac\",\n        \"audio/aac\"\n    ],\n    [\n        \"abw\",\n        \"application/x-abiword\"\n    ],\n    [\n        \"arc\",\n        \"application/x-freearc\"\n    ],\n    [\n        \"avif\",\n        \"image/avif\"\n    ],\n    [\n        \"avi\",\n        \"video/x-msvideo\"\n    ],\n    [\n        \"azw\",\n        \"application/vnd.amazon.ebook\"\n    ],\n    [\n        \"bin\",\n        \"application/octet-stream\"\n    ],\n    [\n        \"bmp\",\n        \"image/bmp\"\n    ],\n    [\n        \"bz\",\n        \"application/x-bzip\"\n    ],\n    [\n        \"bz2\",\n        \"application/x-bzip2\"\n    ],\n    [\n        \"cda\",\n        \"application/x-cdf\"\n    ],\n    [\n        \"csh\",\n        \"application/x-csh\"\n    ],\n    [\n        \"css\",\n        \"text/css\"\n    ],\n    [\n        \"csv\",\n        \"text/csv\"\n    ],\n    [\n        \"doc\",\n        \"application/msword\"\n    ],\n    [\n        \"docx\",\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n    ],\n    [\n        \"eot\",\n        \"application/vnd.ms-fontobject\"\n    ],\n    [\n        \"epub\",\n        \"application/epub+zip\"\n    ],\n    [\n        \"gz\",\n        \"application/gzip\"\n    ],\n    [\n        \"gif\",\n        \"image/gif\"\n    ],\n    [\n        \"heic\",\n        \"image/heic\"\n    ],\n    [\n        \"heif\",\n        \"image/heif\"\n    ],\n    [\n        \"htm\",\n        \"text/html\"\n    ],\n    [\n        \"html\",\n        \"text/html\"\n    ],\n    [\n        \"ico\",\n        \"image/vnd.microsoft.icon\"\n    ],\n    [\n        \"ics\",\n        \"text/calendar\"\n    ],\n    [\n        \"jar\",\n        \"application/java-archive\"\n    ],\n    [\n        \"jpeg\",\n        \"image/jpeg\"\n    ],\n    [\n        \"jpg\",\n        \"image/jpeg\"\n    ],\n    [\n        \"js\",\n        \"text/javascript\"\n    ],\n    [\n        \"json\",\n        \"application/json\"\n    ],\n    [\n        \"jsonld\",\n        \"application/ld+json\"\n    ],\n    [\n        \"mid\",\n        \"audio/midi\"\n    ],\n    [\n        \"midi\",\n        \"audio/midi\"\n    ],\n    [\n        \"mjs\",\n        \"text/javascript\"\n    ],\n    [\n        \"mp3\",\n        \"audio/mpeg\"\n    ],\n    [\n        \"mp4\",\n        \"video/mp4\"\n    ],\n    [\n        \"mpeg\",\n        \"video/mpeg\"\n    ],\n    [\n        \"mpkg\",\n        \"application/vnd.apple.installer+xml\"\n    ],\n    [\n        \"odp\",\n        \"application/vnd.oasis.opendocument.presentation\"\n    ],\n    [\n        \"ods\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    [\n        \"odt\",\n        \"application/vnd.oasis.opendocument.text\"\n    ],\n    [\n        \"oga\",\n        \"audio/ogg\"\n    ],\n    [\n        \"ogv\",\n        \"video/ogg\"\n    ],\n    [\n        \"ogx\",\n        \"application/ogg\"\n    ],\n    [\n        \"opus\",\n        \"audio/opus\"\n    ],\n    [\n        \"otf\",\n        \"font/otf\"\n    ],\n    [\n        \"png\",\n        \"image/png\"\n    ],\n    [\n        \"pdf\",\n        \"application/pdf\"\n    ],\n    [\n        \"php\",\n        \"application/x-httpd-php\"\n    ],\n    [\n        \"ppt\",\n        \"application/vnd.ms-powerpoint\"\n    ],\n    [\n        \"pptx\",\n        \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n    ],\n    [\n        \"rar\",\n        \"application/vnd.rar\"\n    ],\n    [\n        \"rtf\",\n        \"application/rtf\"\n    ],\n    [\n        \"sh\",\n        \"application/x-sh\"\n    ],\n    [\n        \"svg\",\n        \"image/svg+xml\"\n    ],\n    [\n        \"swf\",\n        \"application/x-shockwave-flash\"\n    ],\n    [\n        \"tar\",\n        \"application/x-tar\"\n    ],\n    [\n        \"tif\",\n        \"image/tiff\"\n    ],\n    [\n        \"tiff\",\n        \"image/tiff\"\n    ],\n    [\n        \"ts\",\n        \"video/mp2t\"\n    ],\n    [\n        \"ttf\",\n        \"font/ttf\"\n    ],\n    [\n        \"txt\",\n        \"text/plain\"\n    ],\n    [\n        \"vsd\",\n        \"application/vnd.visio\"\n    ],\n    [\n        \"wav\",\n        \"audio/wav\"\n    ],\n    [\n        \"weba\",\n        \"audio/webm\"\n    ],\n    [\n        \"webm\",\n        \"video/webm\"\n    ],\n    [\n        \"webp\",\n        \"image/webp\"\n    ],\n    [\n        \"woff\",\n        \"font/woff\"\n    ],\n    [\n        \"woff2\",\n        \"font/woff2\"\n    ],\n    [\n        \"xhtml\",\n        \"application/xhtml+xml\"\n    ],\n    [\n        \"xls\",\n        \"application/vnd.ms-excel\"\n    ],\n    [\n        \"xlsx\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ],\n    [\n        \"xml\",\n        \"application/xml\"\n    ],\n    [\n        \"xul\",\n        \"application/vnd.mozilla.xul+xml\"\n    ],\n    [\n        \"zip\",\n        \"application/zip\"\n    ],\n    [\n        \"7z\",\n        \"application/x-7z-compressed\"\n    ],\n    // Others\n    [\n        \"mkv\",\n        \"video/x-matroska\"\n    ],\n    [\n        \"mov\",\n        \"video/quicktime\"\n    ],\n    [\n        \"msg\",\n        \"application/vnd.ms-outlook\"\n    ]\n]);\nfunction toFileWithPath(file, path) {\n    const f = withMimeType(file);\n    if (typeof f.path !== \"string\") {\n        const { webkitRelativePath } = file;\n        Object.defineProperty(f, \"path\", {\n            value: typeof path === \"string\" ? path : // If <input webkitdirectory> is set,\n            // the File will have a {webkitRelativePath} property\n            // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\n            typeof webkitRelativePath === \"string\" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,\n            writable: false,\n            configurable: false,\n            enumerable: true\n        });\n    }\n    return f;\n}\nfunction withMimeType(file) {\n    const { name } = file;\n    const hasExtension = name && name.lastIndexOf(\".\") !== -1;\n    if (hasExtension && !file.type) {\n        const ext = name.split(\".\").pop().toLowerCase();\n        const type = COMMON_MIME_TYPES.get(ext);\n        if (type) {\n            Object.defineProperty(file, \"type\", {\n                value: type,\n                writable: false,\n                configurable: false,\n                enumerable: true\n            });\n        }\n    }\n    return file;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/file.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCode: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.ErrorCode),\n/* harmony export */   \"default\": () => (/* binding */ Dropzone),\n/* harmony export */   useDropzone: () => (/* binding */ useDropzone)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\n/* harmony import */ var _file_selector_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file-selector.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/utils.mjs\");\n/* __next_internal_client_entry_do_not_use__ ErrorCode,default,useDropzone auto */ \n\n\n\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude)=>{\n    var target = {};\n    for(var prop in source)if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n    if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)){\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n    }\n    return target;\n};\nconst Dropzone = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((_a, ref)=>{\n    var _b = _a, { children } = _b, params = __objRest(_b, [\n        \"children\"\n    ]);\n    const _a2 = useDropzone(params), { open } = _a2, props = __objRest(_a2, [\n        \"open\"\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, ()=>({\n            open\n        }), [\n        open\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children(__spreadProps(__spreadValues({}, props), {\n        open\n    })));\n});\nDropzone.displayName = \"Dropzone\";\nconst defaultProps = {\n    disabled: false,\n    getFilesFromEvent: _file_selector_mjs__WEBPACK_IMPORTED_MODULE_2__.fromEvent,\n    maxSize: Infinity,\n    minSize: 0,\n    multiple: true,\n    maxFiles: 0,\n    preventDropOnDocument: true,\n    noClick: false,\n    noKeyboard: false,\n    noDrag: false,\n    noDragEventsBubbling: false,\n    validator: null,\n    useFsAccessApi: true,\n    autoFocus: false\n};\nDropzone.defaultProps = defaultProps;\nDropzone.propTypes = {\n    /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected\n   */ children: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Set accepted file types.\n   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).\n   */ accept: prop_types__WEBPACK_IMPORTED_MODULE_3__.objectOf(prop_types__WEBPACK_IMPORTED_MODULE_3__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_3__.string)),\n    /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */ multiple: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If false, allow dropped items to take over the current browser window\n   */ preventDropOnDocument: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, disables click to open the native file selection dialog\n   */ noClick: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   */ noKeyboard: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, disables drag 'n' drop\n   */ noDrag: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, stops drag event propagation to parents\n   */ noDragEventsBubbling: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Minimum file size (in bytes)\n   */ minSize: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\n    /**\n   * Maximum file size (in bytes)\n   */ maxSize: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\n    /**\n   * Maximum accepted number of files\n   * The default value is 0 which means there is no limitation to how many files are accepted.\n   */ maxFiles: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\n    /**\n   * Enable/disable the dropzone\n   */ disabled: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */ getFilesFromEvent: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when closing the file dialog with no selection\n   */ onFileDialogCancel: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when opening the file dialog\n   */ onFileDialogOpen: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n   * to open the file picker instead of using an `<input type=\"file\">` click event.\n   */ useFsAccessApi: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Set to true to focus the root element on render\n   */ autoFocus: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */ onDragEnter: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */ onDragLeave: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */ onDragOver: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are dropped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */ onDrop: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */ onDropAccepted: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event\n   */ onDropRejected: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when there's some error from any of the promises.\n   *\n   * @param {Error} error\n   */ onError: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Custom validation function. It must return null if there's no errors.\n   * @param {File} file\n   * @returns {FileError|FileError[]|null}\n   */ validator: prop_types__WEBPACK_IMPORTED_MODULE_3__.func\n};\nconst initialState = {\n    isFocused: false,\n    isFileDialogActive: false,\n    isDragActive: false,\n    isDragAccept: false,\n    isDragReject: false,\n    acceptedFiles: [],\n    fileRejections: []\n};\nfunction useDropzone(props = {}) {\n    const { accept, disabled, getFilesFromEvent, maxSize, minSize, multiple, maxFiles, onDragEnter, onDragLeave, onDragOver, onDrop, onDropAccepted, onDropRejected, onFileDialogCancel, onFileDialogOpen, useFsAccessApi, autoFocus, preventDropOnDocument, noClick, noKeyboard, noDrag, noDragEventsBubbling, onError, validator } = __spreadValues(__spreadValues({}, defaultProps), props);\n    const acceptAttr = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.acceptPropAsAcceptAttr)(accept), [\n        accept\n    ]);\n    const pickerTypes = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.pickerOptionsFromAccept)(accept), [\n        accept\n    ]);\n    const onFileDialogOpenCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop, [\n        onFileDialogOpen\n    ]);\n    const onFileDialogCancelCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop, [\n        onFileDialogCancel\n    ]);\n    const rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, initialState);\n    const { isFocused, isFileDialogActive } = state;\n    const fsAccessApiWorksRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)( false && 0);\n    const onWindowFocus = ()=>{\n        if (!fsAccessApiWorksRef.current && isFileDialogActive) {\n            setTimeout(()=>{\n                if (inputRef.current) {\n                    const { files } = inputRef.current;\n                    if (!files.length) {\n                        dispatch({\n                            type: \"closeDialog\"\n                        });\n                        onFileDialogCancelCb();\n                    }\n                }\n            }, 300);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        window.addEventListener(\"focus\", onWindowFocus, false);\n        return ()=>{\n            window.removeEventListener(\"focus\", onWindowFocus, false);\n        };\n    }, [\n        inputRef,\n        isFileDialogActive,\n        onFileDialogCancelCb,\n        fsAccessApiWorksRef\n    ]);\n    const dragTargetsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const onDocumentDrop = (event)=>{\n        if (rootRef.current && rootRef.current.contains(event.target)) {\n            return;\n        }\n        event.preventDefault();\n        dragTargetsRef.current = [];\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (preventDropOnDocument) {\n            document.addEventListener(\"dragover\", _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.onDocumentDragOver, false);\n            document.addEventListener(\"drop\", onDocumentDrop, false);\n        }\n        return ()=>{\n            if (preventDropOnDocument) {\n                document.removeEventListener(\"dragover\", _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.onDocumentDragOver);\n                document.removeEventListener(\"drop\", onDocumentDrop);\n            }\n        };\n    }, [\n        rootRef,\n        preventDropOnDocument\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!disabled && autoFocus && rootRef.current) {\n            rootRef.current.focus();\n        }\n        return ()=>{};\n    }, [\n        rootRef,\n        autoFocus,\n        disabled\n    ]);\n    const onErrCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{\n        if (onError) {\n            onError(e);\n        } else {\n            console.error(e);\n        }\n    }, [\n        onError\n    ]);\n    const onDragEnterCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        dragTargetsRef.current = [\n            ...dragTargetsRef.current,\n            event.target\n        ];\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event)) {\n            Promise.resolve(getFilesFromEvent(event)).then((files)=>{\n                if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isPropagationStopped)(event) && !noDragEventsBubbling) {\n                    return;\n                }\n                const fileCount = files.length;\n                const isDragAccept = fileCount > 0 && (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.allFilesAccepted)({\n                    files,\n                    accept: acceptAttr,\n                    minSize,\n                    maxSize,\n                    multiple,\n                    maxFiles,\n                    validator\n                });\n                const isDragReject = fileCount > 0 && !isDragAccept;\n                dispatch({\n                    isDragAccept,\n                    isDragReject,\n                    isDragActive: true,\n                    type: \"setDraggedFiles\"\n                });\n                if (onDragEnter) {\n                    onDragEnter(event);\n                }\n            }).catch((e)=>onErrCb(e));\n        }\n    }, [\n        getFilesFromEvent,\n        onDragEnter,\n        onErrCb,\n        noDragEventsBubbling,\n        acceptAttr,\n        minSize,\n        maxSize,\n        multiple,\n        maxFiles,\n        validator\n    ]);\n    const onDragOverCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        const hasFiles = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event);\n        if (hasFiles && event.dataTransfer) {\n            try {\n                event.dataTransfer.dropEffect = \"copy\";\n            } catch (e) {}\n        }\n        if (hasFiles && onDragOver) {\n            onDragOver(event);\n        }\n        return false;\n    }, [\n        onDragOver,\n        noDragEventsBubbling\n    ]);\n    const onDragLeaveCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        const targets = dragTargetsRef.current.filter((target)=>rootRef.current && rootRef.current.contains(target));\n        const targetIdx = targets.indexOf(event.target);\n        if (targetIdx !== -1) {\n            targets.splice(targetIdx, 1);\n        }\n        dragTargetsRef.current = targets;\n        if (targets.length > 0) {\n            return;\n        }\n        dispatch({\n            type: \"setDraggedFiles\",\n            isDragActive: false,\n            isDragAccept: false,\n            isDragReject: false\n        });\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event) && onDragLeave) {\n            onDragLeave(event);\n        }\n    }, [\n        rootRef,\n        onDragLeave,\n        noDragEventsBubbling\n    ]);\n    const setFiles = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((files, event)=>{\n        const acceptedFiles = [];\n        const fileRejections = [];\n        files.forEach((file)=>{\n            const [accepted, acceptError] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.fileAccepted)(file, acceptAttr);\n            const [sizeMatch, sizeError] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.fileMatchSize)(file, minSize, maxSize);\n            const customErrors = validator ? validator(file) : null;\n            if (accepted && sizeMatch && !customErrors) {\n                acceptedFiles.push(file);\n            } else {\n                let errors = [\n                    acceptError,\n                    sizeError\n                ];\n                if (customErrors) {\n                    errors = errors.concat(customErrors);\n                }\n                fileRejections.push({\n                    file,\n                    errors: errors.filter((e)=>e)\n                });\n            }\n        });\n        if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {\n            acceptedFiles.forEach((file)=>{\n                fileRejections.push({\n                    file,\n                    errors: [\n                        _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.TOO_MANY_FILES_REJECTION\n                    ]\n                });\n            });\n            acceptedFiles.splice(0);\n        }\n        dispatch({\n            acceptedFiles,\n            fileRejections,\n            type: \"setFiles\"\n        });\n        if (onDrop) {\n            onDrop(acceptedFiles, fileRejections, event);\n        }\n        if (fileRejections.length > 0 && onDropRejected) {\n            onDropRejected(fileRejections, event);\n        }\n        if (acceptedFiles.length > 0 && onDropAccepted) {\n            onDropAccepted(acceptedFiles, event);\n        }\n    }, [\n        dispatch,\n        multiple,\n        acceptAttr,\n        minSize,\n        maxSize,\n        maxFiles,\n        onDrop,\n        onDropAccepted,\n        onDropRejected,\n        validator\n    ]);\n    const onDropCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        dragTargetsRef.current = [];\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event)) {\n            Promise.resolve(getFilesFromEvent(event)).then((files)=>{\n                if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isPropagationStopped)(event) && !noDragEventsBubbling) {\n                    return;\n                }\n                setFiles(files, event);\n            }).catch((e)=>onErrCb(e));\n        }\n        dispatch({\n            type: \"reset\"\n        });\n    }, [\n        getFilesFromEvent,\n        setFiles,\n        onErrCb,\n        noDragEventsBubbling\n    ]);\n    const openFileDialog = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (fsAccessApiWorksRef.current) {\n            dispatch({\n                type: \"openDialog\"\n            });\n            onFileDialogOpenCb();\n            const opts = {\n                multiple,\n                types: pickerTypes\n            };\n            window.showOpenFilePicker(opts).then((handles)=>getFilesFromEvent(handles)).then((files)=>{\n                setFiles(files, null);\n                dispatch({\n                    type: \"closeDialog\"\n                });\n            }).catch((e)=>{\n                if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isAbort)(e)) {\n                    onFileDialogCancelCb(e);\n                    dispatch({\n                        type: \"closeDialog\"\n                    });\n                } else if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isSecurityError)(e)) {\n                    fsAccessApiWorksRef.current = false;\n                    if (inputRef.current) {\n                        inputRef.current.value = null;\n                        inputRef.current.click();\n                    } else {\n                        onErrCb(new Error(\"Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided.\"));\n                    }\n                } else {\n                    onErrCb(e);\n                }\n            });\n            return;\n        }\n        if (inputRef.current) {\n            dispatch({\n                type: \"openDialog\"\n            });\n            onFileDialogOpenCb();\n            inputRef.current.value = null;\n            inputRef.current.click();\n        }\n    }, [\n        dispatch,\n        onFileDialogOpenCb,\n        onFileDialogCancelCb,\n        useFsAccessApi,\n        setFiles,\n        onErrCb,\n        pickerTypes,\n        multiple\n    ]);\n    const onKeyDownCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n            return;\n        }\n        if (event.key === \" \" || event.key === \"Enter\" || event.keyCode === 32 || event.keyCode === 13) {\n            event.preventDefault();\n            openFileDialog();\n        }\n    }, [\n        rootRef,\n        openFileDialog\n    ]);\n    const onFocusCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        dispatch({\n            type: \"focus\"\n        });\n    }, []);\n    const onBlurCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        dispatch({\n            type: \"blur\"\n        });\n    }, []);\n    const onClickCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (noClick) {\n            return;\n        }\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isIeOrEdge)()) {\n            setTimeout(openFileDialog, 0);\n        } else {\n            openFileDialog();\n        }\n    }, [\n        noClick,\n        openFileDialog\n    ]);\n    const composeHandler = (fn)=>{\n        return disabled ? null : fn;\n    };\n    const composeKeyboardHandler = (fn)=>{\n        return noKeyboard ? null : composeHandler(fn);\n    };\n    const composeDragHandler = (fn)=>{\n        return noDrag ? null : composeHandler(fn);\n    };\n    const stopPropagation = (event)=>{\n        if (noDragEventsBubbling) {\n            event.stopPropagation();\n        }\n    };\n    const getRootProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(_a = {})=>{\n            var _b = _a, { refKey = \"ref\", role, onKeyDown, onFocus, onBlur, onClick, onDragEnter: onDragEnter2, onDragOver: onDragOver2, onDragLeave: onDragLeave2, onDrop: onDrop2 } = _b, rest = __objRest(_b, [\n                \"refKey\",\n                \"role\",\n                \"onKeyDown\",\n                \"onFocus\",\n                \"onBlur\",\n                \"onClick\",\n                \"onDragEnter\",\n                \"onDragOver\",\n                \"onDragLeave\",\n                \"onDrop\"\n            ]);\n            return __spreadValues(__spreadValues({\n                onKeyDown: composeKeyboardHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onKeyDown, onKeyDownCb)),\n                onFocus: composeKeyboardHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onFocus, onFocusCb)),\n                onBlur: composeKeyboardHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onBlur, onBlurCb)),\n                onClick: composeHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onClick, onClickCb)),\n                onDragEnter: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDragEnter2, onDragEnterCb)),\n                onDragOver: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDragOver2, onDragOverCb)),\n                onDragLeave: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDragLeave2, onDragLeaveCb)),\n                onDrop: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDrop2, onDropCb)),\n                role: typeof role === \"string\" && role !== \"\" ? role : \"presentation\",\n                [refKey]: rootRef\n            }, !disabled && !noKeyboard ? {\n                tabIndex: 0\n            } : {}), rest);\n        }, [\n        rootRef,\n        onKeyDownCb,\n        onFocusCb,\n        onBlurCb,\n        onClickCb,\n        onDragEnterCb,\n        onDragOverCb,\n        onDragLeaveCb,\n        onDropCb,\n        noKeyboard,\n        noDrag,\n        disabled\n    ]);\n    const onInputElementClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.stopPropagation();\n    }, []);\n    const getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(_a = {})=>{\n            var _b = _a, { refKey = \"ref\", onChange, onClick } = _b, rest = __objRest(_b, [\n                \"refKey\",\n                \"onChange\",\n                \"onClick\"\n            ]);\n            const inputProps = {\n                accept: acceptAttr,\n                multiple,\n                type: \"file\",\n                style: {\n                    display: \"none\"\n                },\n                onChange: composeHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onChange, onDropCb)),\n                onClick: composeHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onClick, onInputElementClick)),\n                tabIndex: -1,\n                [refKey]: inputRef\n            };\n            return __spreadValues(__spreadValues({}, inputProps), rest);\n        }, [\n        inputRef,\n        accept,\n        multiple,\n        onDropCb,\n        disabled\n    ]);\n    return __spreadProps(__spreadValues({}, state), {\n        isFocused: isFocused && !disabled,\n        getRootProps,\n        getInputProps,\n        rootRef,\n        inputRef,\n        open: composeHandler(openFileDialog)\n    });\n}\nfunction reducer(state, action) {\n    switch(action.type){\n        case \"focus\":\n            return __spreadProps(__spreadValues({}, state), {\n                isFocused: true\n            });\n        case \"blur\":\n            return __spreadProps(__spreadValues({}, state), {\n                isFocused: false\n            });\n        case \"openDialog\":\n            return __spreadProps(__spreadValues({}, initialState), {\n                isFileDialogActive: true\n            });\n        case \"closeDialog\":\n            return __spreadProps(__spreadValues({}, state), {\n                isFileDialogActive: false\n            });\n        case \"setDraggedFiles\":\n            return __spreadProps(__spreadValues({}, state), {\n                isDragActive: action.isDragActive,\n                isDragAccept: action.isDragAccept,\n                isDragReject: action.isDragReject\n            });\n        case \"setFiles\":\n            return __spreadProps(__spreadValues({}, state), {\n                acceptedFiles: action.acceptedFiles,\n                fileRejections: action.fileRejections\n            });\n        case \"reset\":\n            return __spreadValues({}, initialState);\n        default:\n            return state;\n    }\n}\nfunction noop() {}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/utils.mjs":
/*!************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/utils.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCode: () => (/* binding */ ErrorCode),\n/* harmony export */   FILE_INVALID_TYPE: () => (/* binding */ FILE_INVALID_TYPE),\n/* harmony export */   FILE_TOO_LARGE: () => (/* binding */ FILE_TOO_LARGE),\n/* harmony export */   FILE_TOO_SMALL: () => (/* binding */ FILE_TOO_SMALL),\n/* harmony export */   TOO_MANY_FILES: () => (/* binding */ TOO_MANY_FILES),\n/* harmony export */   TOO_MANY_FILES_REJECTION: () => (/* binding */ TOO_MANY_FILES_REJECTION),\n/* harmony export */   acceptPropAsAcceptAttr: () => (/* binding */ acceptPropAsAcceptAttr),\n/* harmony export */   allFilesAccepted: () => (/* binding */ allFilesAccepted),\n/* harmony export */   canUseFileSystemAccessAPI: () => (/* binding */ canUseFileSystemAccessAPI),\n/* harmony export */   composeEventHandlers: () => (/* binding */ composeEventHandlers),\n/* harmony export */   fileAccepted: () => (/* binding */ fileAccepted),\n/* harmony export */   fileMatchSize: () => (/* binding */ fileMatchSize),\n/* harmony export */   getInvalidTypeRejectionErr: () => (/* binding */ getInvalidTypeRejectionErr),\n/* harmony export */   getTooLargeRejectionErr: () => (/* binding */ getTooLargeRejectionErr),\n/* harmony export */   getTooSmallRejectionErr: () => (/* binding */ getTooSmallRejectionErr),\n/* harmony export */   isAbort: () => (/* binding */ isAbort),\n/* harmony export */   isEvtWithFiles: () => (/* binding */ isEvtWithFiles),\n/* harmony export */   isExt: () => (/* binding */ isExt),\n/* harmony export */   isIeOrEdge: () => (/* binding */ isIeOrEdge),\n/* harmony export */   isMIMEType: () => (/* binding */ isMIMEType),\n/* harmony export */   isPropagationStopped: () => (/* binding */ isPropagationStopped),\n/* harmony export */   isSecurityError: () => (/* binding */ isSecurityError),\n/* harmony export */   onDocumentDragOver: () => (/* binding */ onDocumentDragOver),\n/* harmony export */   pickerOptionsFromAccept: () => (/* binding */ pickerOptionsFromAccept)\n/* harmony export */ });\n/* harmony import */ var _attr_accept_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attr-accept.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs\");\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nconst FILE_INVALID_TYPE = \"file-invalid-type\";\nconst FILE_TOO_LARGE = \"file-too-large\";\nconst FILE_TOO_SMALL = \"file-too-small\";\nconst TOO_MANY_FILES = \"too-many-files\";\nconst ErrorCode = {\n    FileInvalidType: FILE_INVALID_TYPE,\n    FileTooLarge: FILE_TOO_LARGE,\n    FileTooSmall: FILE_TOO_SMALL,\n    TooManyFiles: TOO_MANY_FILES\n};\nconst getInvalidTypeRejectionErr = (accept)=>{\n    accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;\n    const messageSuffix = Array.isArray(accept) ? `one of ${accept.join(\", \")}` : accept;\n    return {\n        code: FILE_INVALID_TYPE,\n        message: `File type must be ${messageSuffix}`\n    };\n};\nconst getTooLargeRejectionErr = (maxSize)=>{\n    return {\n        code: FILE_TOO_LARGE,\n        message: `File is larger than ${maxSize} ${maxSize === 1 ? \"byte\" : \"bytes\"}`\n    };\n};\nconst getTooSmallRejectionErr = (minSize)=>{\n    return {\n        code: FILE_TOO_SMALL,\n        message: `File is smaller than ${minSize} ${minSize === 1 ? \"byte\" : \"bytes\"}`\n    };\n};\nconst TOO_MANY_FILES_REJECTION = {\n    code: TOO_MANY_FILES,\n    message: \"Too many files\"\n};\nfunction fileAccepted(file, accept) {\n    const isAcceptable = file.type === \"application/x-moz-file\" || (0,_attr_accept_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(file, accept);\n    return [\n        isAcceptable,\n        isAcceptable ? null : getInvalidTypeRejectionErr(accept)\n    ];\n}\nfunction fileMatchSize(file, minSize, maxSize) {\n    if (isDefined(file.size)) {\n        if (isDefined(minSize) && isDefined(maxSize)) {\n            if (file.size > maxSize) return [\n                false,\n                getTooLargeRejectionErr(maxSize)\n            ];\n            if (file.size < minSize) return [\n                false,\n                getTooSmallRejectionErr(minSize)\n            ];\n        } else if (isDefined(minSize) && file.size < minSize) return [\n            false,\n            getTooSmallRejectionErr(minSize)\n        ];\n        else if (isDefined(maxSize) && file.size > maxSize) return [\n            false,\n            getTooLargeRejectionErr(maxSize)\n        ];\n    }\n    return [\n        true,\n        null\n    ];\n}\nfunction isDefined(value) {\n    return value !== void 0 && value !== null;\n}\nfunction allFilesAccepted({ files, accept, minSize, maxSize, multiple, maxFiles, validator }) {\n    if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {\n        return false;\n    }\n    return files.every((file)=>{\n        const [accepted] = fileAccepted(file, accept);\n        const [sizeMatch] = fileMatchSize(file, minSize, maxSize);\n        const customErrors = validator ? validator(file) : null;\n        return accepted && sizeMatch && !customErrors;\n    });\n}\nfunction isPropagationStopped(event) {\n    if (typeof event.isPropagationStopped === \"function\") {\n        return event.isPropagationStopped();\n    } else if (typeof event.cancelBubble !== \"undefined\") {\n        return event.cancelBubble;\n    }\n    return false;\n}\nfunction isEvtWithFiles(event) {\n    if (!event.dataTransfer) {\n        return !!event.target && !!event.target.files;\n    }\n    return Array.prototype.some.call(event.dataTransfer.types, (type)=>type === \"Files\" || type === \"application/x-moz-file\");\n}\nfunction onDocumentDragOver(event) {\n    event.preventDefault();\n}\nfunction isIe(userAgent) {\n    return userAgent.indexOf(\"MSIE\") !== -1 || userAgent.indexOf(\"Trident/\") !== -1;\n}\nfunction isEdge(userAgent) {\n    return userAgent.indexOf(\"Edge/\") !== -1;\n}\nfunction isIeOrEdge(userAgent = window.navigator.userAgent) {\n    return isIe(userAgent) || isEdge(userAgent);\n}\nfunction composeEventHandlers(...fns) {\n    return (event, ...args)=>fns.some((fn)=>{\n            if (!isPropagationStopped(event) && fn) {\n                fn(event, ...args);\n            }\n            return isPropagationStopped(event);\n        });\n}\nfunction canUseFileSystemAccessAPI() {\n    return \"showOpenFilePicker\" in window;\n}\nfunction pickerOptionsFromAccept(accept) {\n    if (isDefined(accept)) {\n        const acceptForPicker = Object.entries(accept).filter(([mimeType, ext])=>{\n            let ok = true;\n            if (!isMIMEType(mimeType)) {\n                console.warn(`Skipped \"${mimeType}\" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.`);\n                ok = false;\n            }\n            if (!Array.isArray(ext) || !ext.every(isExt)) {\n                console.warn(`Skipped \"${mimeType}\" because an invalid file extension was provided.`);\n                ok = false;\n            }\n            return ok;\n        }).reduce((agg, [mimeType, ext])=>__spreadProps(__spreadValues({}, agg), {\n                [mimeType]: ext\n            }), {});\n        return [\n            {\n                // description is required due to https://crbug.com/1264708\n                description: \"Files\",\n                accept: acceptForPicker\n            }\n        ];\n    }\n    return accept;\n}\nfunction acceptPropAsAcceptAttr(accept) {\n    if (isDefined(accept)) {\n        return Object.entries(accept).reduce((a, [mimeType, ext])=>[\n                ...a,\n                mimeType,\n                ...ext\n            ], []).filter((v)=>isMIMEType(v) || isExt(v)).join(\",\");\n    }\n    return void 0;\n}\nfunction isAbort(v) {\n    return v instanceof DOMException && (v.name === \"AbortError\" || v.code === v.ABORT_ERR);\n}\nfunction isSecurityError(v) {\n    return v instanceof DOMException && (v.name === \"SecurityError\" || v.code === v.SECURITY_ERR);\n}\nfunction isMIMEType(v) {\n    return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n    return /^.*\\.[\\w]+$/.test(v);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/utils.mjs\n");

/***/ })

};
;